"""
1.元组的定义：
（元素,元素,.....,元素）
变量名称 =（元素,元素,.....,元素）

2.定义空元组
变量名称 = ()
变量名称 = tuple()

3.定义1个元素的元组,注意有个逗号,
name = (元素,)

4.元组的嵌套
name = ((),(),....,())

5.下标索引取出内容
name[][]

6.关于元组的操作：index(),count(),len()

7.元组的元素不可修改(增加或删除元素等),即可以把元组看做是只读的列表list
  但是元组里嵌套了列表list，可以对列表的元素进行修改、添加、删除操作

总结特点：
1.可以容纳多个数据
2.可以容纳不同类型的数据
3.数据是有序存储的(下标所以)
4.允许重复数据存在
5.不可以修改(增加或删除元素等)
6.支持for循环
多数特征和list一样,不同点在于不可修改的特性！
"""

t1 = (1, "Hello", True)
t2 = ()
t3 = tuple()
# 注意"World"后有个逗号,
t4 = ("World",)
t5 = ((1, 2, 3), ("FZ", "GD", "ZJ"), (True, False), ("a", 1, None), "Happy")

print(f"t1的类型是:{type(t1)},内容是:{t1}")
print(f"t2的类型是:{type(t2)},内容是:{t2}")
print(f"t3的类型是:{type(t3)},内容是:{t3}")
print(f"t4的类型是:{type(t4)},内容是:{t4}")
print(f"t5的类型是:{type(t5)},内容是:{t5}")
print(f"从嵌套t5元组中取出False元素:{t5[2][1]}")
print(f"在嵌套t5中查找元素Happy所在的下标:{t5.index('Happy')}")

t6 = ("福建", "广东", "浙江", "福州", "广州", "杭州")
print(f"在元组t6中查找元素杭州所在的下标:{t6.index('杭州')}")

t7 = ("福建", "广东", "浙江", "福州", "福州", "福州", "广州", "杭州")
print(f"统计元组t7中元素福州的数量:{t7.count('福州')}")
print(f"统计元组t7中元素的总数:{len(t7)}")

# 定义一个带列表的元组
t8 = (1, 2, ["福建", "广东", "广西"], 3)
print(f"t8的内容是:{t8}")
t8[2][0] = "北京"
t8[2][1] = "上海"
t8[2][2] = "南京"
print(f"修改元组t8内的列表后的内容是:{t8}")
