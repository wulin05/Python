"""
演示数据容器集合的使用
列表使用: []
元组使用: ()
字符串使用: ""
集合使用: {}  集合内的元素不重复，且无序！

从"集合的元素是无序的不重复的"这句话,可以得出结论：
集合不属于序列了,因为序列是：内容连续、有序，可使用下标索引的一类数据容器
前面的列表、元组、字符串都属于序列，而集合不属于序列！！
所以,集合不支持： 下标索引访问
但是,集合和列表一样,是允许修改的,所以我们来看看集合的修改方法：
1.集合.add(元素) : 将指定元素添加到集合内,集合本身被修改,添加了新元素
2.集合.remove(元素) : 将指定元素从集合内移除,集合本身被修改,移除了元素
3.集合.pop(): 从集合中随机取出一个元素,会得到一个元素的结果。同时集合本身被修改,元素被移除。
4.集合.clear(): 清空集合
5.取出2个集合的差集：
  语法：集合1.difference(集合2)
  结果：取出集合1和集合2的差集(集合1有而集合2没有的: 集合1-集合2),得到一个新集合,集合1和集合2不变。
6.消除2个集合的差集：
  语法：集合1.difference_update(集合2)
  功能：对比集合1和集合2,在集合1内,删除和集合2相同的元素。
  结果：集合1被修改,集合2不变
7.2个集合合并
  语法：集合1.union(集合2)
  功能：将集合1和集合2组成新集合
  结果：得到新集合,集合1和集合2不变
8.统计集合元素数量
  语法：len(集合)
9.集合的遍历:
  集合不支持下标索引,不能使用while循环
  可以用for循环

基本语法：
1.定义集合字面量: {元素, 元素, ...., 元素}
2.定义集合变量:  变量名称 = {元素, 元素, ...., 元素}
3.定义空集合: 变量名称 = set()
"""

# 定义集合:请注意看输出，集合内的元素不重复，且无序！！！  所以，集合不支持：下标索引 ！！！
my_set = {"传智教育", "黑马程序员", "itheima", "传智教育", "黑马程序员", "itheima", "传智教育", "黑马程序员", "itheima"}
my_set_empty = set()
print(f"my_set的内容是:{my_set},类型是:{type(my_set)}")
print(f"my_set_empty的内容是:{my_set_empty},类型是:{type(my_set_empty)}")

# 如果想取集合中的某个元素，那么先将集合转换类型为列表list，然后利用列表的索引获取元素值
my_list = list(my_set)
print(f"将集合my_set转换为列表my_list的内容：{my_list},类型是:{type(my_list)}")
# 通过列表的下标索引对列表my_list取出下标对应的元素值
print(f"取出my_list下标2的元素值：{my_list[2]}")

print("=====================================================================")
# 添加新元素
my_set.add("Python")
my_set.add("传智教育")   # 因为集合已经有“传智教育”的元素了，所以添加没有效果
print(my_set)

print("=====================================================================")
# 移除元素
my_set.remove("Python")
print(my_set)

print("=====================================================================")
# 随机取出一个元素: 集合.pop()，从集合中随机取出一个元素。注意，集合.pop(下标)在列表的使用，意义是删除。
# 所以，注意到没有，集合因为是无序的，所以没有下标的概念，那么集合.pop()就是随机取值的了！
my_set = {"hello", "world", "itheima"}
element = my_set.pop()
print(f"集合被取出元素是: {element}, 取出元素后: {my_set}")

print("=====================================================================")
# 清空集合
first_set = {"传智教育", "黑马程序员", "itheima", "传智教育", "黑马程序员", "itheima", "传智教育", "黑马程序员", "itheima"}
print(f"集合first_set的元素有:{first_set}")
first_set.clear()
print(f"first_set集合清空后,结果:{first_set}")

print("=====================================================================")
# 取2个集合的差集
# 语法：集合1.difference(集合2),功能：取出集合1和集合2的差集,得到一个新集合(集合1有,而集合2没有), 原集合1和集合2不变
set1 = {1, 2, 4}
set2 = {1, 3, 5}
set3 = set1.difference(set2)
print(f"取两个集合的差集后,得到的新集合set3的内容是: {set3}")

print("=====================================================================")
# 消除2个集合的差集：在集合1，删除和集合2相同的元素；结果：集合1被修改，集合2不变
# 语法：集合1.difference_update(集合2)
set1.difference_update(set2)
print(f"消除集合set1和集合set2的差集后,集合set1的内容是: {set1}")
print(f"消除集合set1和集合set2的差集后,集合set2的内容是: {set2}")


print("=====================================================================")
# 2个集合合并为1个：将集合1和集合2组成新集合；结果：得到新集合，集合1和集合2不变
# 语法：集合1.union(集合2)
set1 = {1, 2, 4}
set2 = {1, 3, 5}
set4 = set1.union(set2)
print(f"将集合set1和集合set2合并后得到新集合set4的内容是: {set4}")
print(f"原集合set1的内容不变: {set1}")
print(f"原集合set2的内容不变: {set2}")

print("=====================================================================")
# 统计集合元素数量
print(set4)
print(f"集合set4内的元素数量有:{len(set4)}")

set5 = {1, 2, 3, 4, 5, 1, 2, 3, 4, 5}
print(set5)
print(f"集合set5内的元素数量有:{len(set5)}")

print("=====================================================================")
# 集合的遍历：注意，集合不支持下标，所以无法用while循环遍历集合
set5 = {1, 2, 3, 4, 5, 1, 2, 3, 4, 5}
for element in set5:
    print(f"{element}\t", end='')

